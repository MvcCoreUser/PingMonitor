// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PingMonitor.DAL.EF;

namespace PingMonitor.Web.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20190910141121_renameField")]
    partial class renameField
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("PingMonitor.DAL.Entities.ApiInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("CheckExecTime");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.ToTable("ApiInfos");
                });

            modelBuilder.Entity("PingMonitor.DAL.Entities.Monitoring", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Accessible");

                    b.Property<int>("ApiInfoId");

                    b.Property<DateTime?>("ExecStart");

                    b.Property<long?>("ExecTimeInMilliseconds");

                    b.HasKey("Id");

                    b.HasIndex("ApiInfoId");

                    b.ToTable("Monitorings");
                });

            modelBuilder.Entity("PingMonitor.DAL.Entities.Monitoring", b =>
                {
                    b.HasOne("PingMonitor.DAL.Entities.ApiInfo", "ApiInfo")
                        .WithMany("Monitorings")
                        .HasForeignKey("ApiInfoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
